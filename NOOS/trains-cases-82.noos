(define (trains-problem :id train-problem-1)
  (solution east)
  (description (define (trains-description :id train-1)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 2)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape ushaped)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape closedrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-2)
  (solution east)
  (description (define (trains-description :id train-2)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 1)
                          (lcont (define (utrianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 2)
                                     (lcont (define (hexagonlod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape dblclosedrect)))
                                     (nwhl 2)
                                     (cshape closedrect)))
                          (nwhl 3)
                          (cshape openrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-3)
  (solution east)
  (description (define (trains-description :id train-3)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (trianglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape openhex)))
                                                (nwhl 2)
                                                (cshape dblslopetop)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 3)
                          (cshape openrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-4)
  (solution east)
  (description (define (trains-description :id train-4)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln long)
                                                (npl 0)
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (trianglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape hexagon)))
                                                (nwhl 2)
                                                (cshape jaggedtop)))
                                     (nwhl 2)
                                     (cshape ellipse)))
                          (nwhl 2)
                          (cshape dblopnrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-5)
  (solution east)
  (description (define (trains-description :id train-5)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 2)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X8 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln long)
                                                           (npl 1)
                                                           (lcont (define (circlelod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape closedrect)))
                                                (nwhl 2)
                                                (cshape openhex)))
                                     (nwhl 2)
                                     (cshape hexagon)))
                          (nwhl 2)
                          (cshape openrect))
                         !X8
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-6)
  (solution east)
  (description (define (trains-description :id train-6)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 1)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape closedushaped)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape ushaped))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-7)
  (solution east)
  (description (define (trains-description :id train-7)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln long)
                                                (npl 2)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 2)
                                                           (lcont (define (circlelod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape ushaped)))
                                                (nwhl 3)
                                                (cshape openrect)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape closedrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-8)
  (solution east)
  (description (define (trains-description :id train-8)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (nwhl 2)
                                     (cshape closedrect)))
                          (nwhl 2)
                          (cshape ushaped))
                         !X7)))))
(define (trains-problem :id train-problem-9)
  (solution east)
  (description (define (trains-description :id train-9)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (rectanglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape openrect)))
                                                (nwhl 2)
                                                (cshape ushaped)))
                                     (nwhl 2)
                                     (cshape ellipse)))
                          (nwhl 2)
                          (cshape closedrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-10)
  (solution east)
  (description (define (trains-description :id train-10)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape hexagon)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape ushaped))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-11)
  (solution east)
  (description (define (trains-description :id train-11)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 1)
                          (lcont (define (utrianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape dblclosedrect)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 3)
                          (cshape closedrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-12)
  (solution east)
  (description (define (trains-description :id train-12)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (nwhl 2)
                                     (cshape peakedhex)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7)))))
(define (trains-problem :id train-problem-13)
  (solution east)
  (description (define (trains-description :id train-13)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln long)
                                                           (npl 1)
                                                           (lcont (define (hexagonlod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape jaggedtop)))
                                                (nwhl 2)
                                                (cshape dblclosedrect)))
                                     (nwhl 2)
                                     (cshape dblopnrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-14)
  (solution east)
  (description (define (trains-description :id train-14)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (diamondlod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 1)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 2)
                                                           (lcont (define (trianglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape ellipse)))
                                                (nwhl 2)
                                                (cshape openhex)))
                                     (nwhl 2)
                                     (cshape jaggedtop)))
                          (nwhl 2)
                          (cshape dblopnrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-15)
  (solution east)
  (description (define (trains-description :id train-15)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape closedrect))
                         !X7)))))
(define (trains-problem :id train-problem-16)
  (solution east)
  (description (define (trains-description :id train-16)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln long)
                                                (npl 1)
                                                (lcont (define (hexagonlod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (circlelod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape dblopnrect)))
                                                (nwhl 2)
                                                (cshape closedrect)))
                                     (nwhl 2)
                                     (cshape ellipse)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-17)
  (solution east)
  (description (define (trains-description :id train-17)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (circlelod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape hexagon)))
                                                (nwhl 2)
                                                (cshape openrect)))
                                     (nwhl 2)
                                     (cshape flatbucket)))
                          (nwhl 2)
                          (cshape ushaped))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-18)
  (solution east)
  (description (define (trains-description :id train-18)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 1)
                          (lcont (define (hexagonlod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln long)
                                                (npl 1)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (circlelod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape hexagon)))
                                                (nwhl 3)
                                                (cshape closedrect)))
                                     (nwhl 2)
                                     (cshape ushaped)))
                          (nwhl 2)
                          (cshape closedrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-19)
  (solution east)
  (description (define (trains-description :id train-19)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape openhex)))
                                     (nwhl 2)
                                     (cshape ellipse)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-20)
  (solution east)
  (description (define (trains-description :id train-20)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (circlelod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape openhex)))
                                                (nwhl 2)
                                                (cshape closedushaped)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape dblopnrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-21)
  (solution east)
  (description (define (trains-description :id train-21)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (circlelod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape openrect)))
                                                (nwhl 2)
                                                (cshape slopeushaped)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape slopeushaped))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-22)
  (solution east)
  (description (define (trains-description :id train-22)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (diamondlod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape ushaped)))
                                                (nwhl 2)
                                                (cshape closedushaped)))
                                     (nwhl 2)
                                     (cshape ellipse)))
                          (nwhl 2)
                          (cshape dblopnrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-23)
  (solution east)
  (description (define (trains-description :id train-23)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln long)
                                                (npl 1)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln long)
                                                           (npl 2)
                                                           (lcont (define (utrianglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape jaggedtop)))
                                                (nwhl 2)
                                                (cshape jaggedtop)))
                                     (nwhl 2)
                                     (cshape slopeushaped)))
                          (nwhl 2)
                          (cshape dblopnrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-24)
  (solution east)
  (description (define (trains-description :id train-24)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (diamondlod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape peakedhex)))
                                     (nwhl 2)
                                     (cshape hexagon)))
                          (nwhl 3)
                          (cshape openrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-25)
  (solution east)
  (description (define (trains-description :id train-25)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (circlelod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape ushaped)))
                                                (nwhl 2)
                                                (cshape slopetop)))
                                     (nwhl 2)
                                     (cshape ellipse)))
                          (nwhl 2)
                          (cshape flatbucket))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-26)
  (solution east)
  (description (define (trains-description :id train-26)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape slopetop)))
                                     (nwhl 2)
                                     (cshape openhex)))
                          (nwhl 2)
                          (cshape dblopnrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-27)
  (solution east)
  (description (define (trains-description :id train-27)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (trianglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape dblclosedrect)))
                                                (nwhl 2)
                                                (cshape ellipse)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-28)
  (solution east)
  (description (define (trains-description :id train-28)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (rectanglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape ellipse)))
                                                (nwhl 2)
                                                (cshape openhex)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape jaggedtop))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-29)
  (solution east)
  (description (define (trains-description :id train-29)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln long)
                                                           (npl 1)
                                                           (lcont (define (rectanglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape jaggedtop)))
                                                (nwhl 2)
                                                (cshape ushaped)))
                                     (nwhl 2)
                                     (cshape ellipse)))
                          (nwhl 2)
                          (cshape ushaped))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-30)
  (solution east)
  (description (define (trains-description :id train-30)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 2)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (trianglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape slopetop)))
                                                (nwhl 2)
                                                (cshape openhex)))
                                     (nwhl 2)
                                     (cshape ushaped)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-31)
  (solution east)
  (description (define (trains-description :id train-31)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 0)
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape closedushaped)))
                                     (nwhl 2)
                                     (cshape closedrect)))
                          (nwhl 3)
                          (cshape closedrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-32)
  (solution east)
  (description (define (trains-description :id train-32)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 1)
                          (lcont (define (hexagonlod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape hexagon)))
                                     (nwhl 2)
                                     (cshape ushaped)))
                          (nwhl 3)
                          (cshape jaggedtop))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-33)
  (solution east)
  (description (define (trains-description :id train-33)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 1)
                                     (lcont (define (hexagonlod)))
                                     (loc 2)
                                     (nwhl 2)
                                     (cshape closedrect)))
                          (nwhl 2)
                          (cshape ellipse))
                         !X7)))))
(define (trains-problem :id train-problem-34)
  (solution east)
  (description (define (trains-description :id train-34)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape closedrect)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 3)
                          (cshape openrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-35)
  (solution east)
  (description (define (trains-description :id train-35)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (diamondlod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (circlelod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape openrect)))
                                                (nwhl 2)
                                                (cshape closedrect)))
                                     (nwhl 2)
                                     (cshape ellipse)))
                          (nwhl 2)
                          (cshape closedrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-36)
  (solution east)
  (description (define (trains-description :id train-36)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 2)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X8 (car)
                                     (ln long)
                                     (npl 1)
                                     (lcont (define (hexagonlod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 2)
                                                           (lcont (define (trianglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape openrect)))
                                                (nwhl 2)
                                                (cshape hexagon)))
                                     (nwhl 2)
                                     (cshape closedrect)))
                          (nwhl 3)
                          (cshape closedrect))
                         !X8
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-37)
  (solution east)
  (description (define (trains-description :id train-37)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (trianglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape openrect)))
                                                (nwhl 2)
                                                (cshape ushaped)))
                                     (nwhl 2)
                                     (cshape openhex)))
                          (nwhl 2)
                          (cshape ellipse))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-38)
  (solution east)
  (description (define (trains-description :id train-38)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 3)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X8 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (diamondlod)))
                                     (loc 2)
                                     (infront (define ?X11 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape flatbucket)))
                                     (nwhl 2)
                                     (cshape ushaped)))
                          (nwhl 3)
                          (cshape closedrect))
                         !X8
                         !X11)))))
(define (trains-problem :id train-problem-39)
  (solution east)
  (description (define (trains-description :id train-39)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 2)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (circlelod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape ushaped)))
                                                (nwhl 2)
                                                (cshape ushaped)))
                                     (nwhl 2)
                                     (cshape ellipse)))
                          (nwhl 2)
                          (cshape closedrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-40)
  (solution east)
  (description (define (trains-description :id train-40)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (diamondlod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (trianglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape ushaped)))
                                                (nwhl 2)
                                                (cshape slopetop)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-41)
  (solution east)
  (description (define (trains-description :id train-41)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln long)
                                                (npl 3)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (nwhl 3)
                                                (cshape closedrect)))
                                     (nwhl 2)
                                     (cshape ellipse)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-42)
  (solution west)
  (description (define (trains-description :id train-42)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape openrect)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape dblopnrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-43)
  (solution west)
  (description (define (trains-description :id train-43)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7)))))
(define (trains-problem :id train-problem-44)
  (solution west)
  (description (define (trains-description :id train-44)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 1)
                                     (lcont (define (utrianglod)))
                                     (loc 2)
                                     (nwhl 2)
                                     (cshape closedrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7)))))
(define (trains-problem :id train-problem-45)
  (solution west)
  (description (define (trains-description :id train-45)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (rectanglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape openrect)))
                                                (nwhl 2)
                                                (cshape ushaped)))
                                     (nwhl 2)
                                     (cshape dblopnrect)))
                          (nwhl 2)
                          (cshape ushaped))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-46)
  (solution west)
  (description (define (trains-description :id train-46)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 2)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X8 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (diamondlod)))
                                     (loc 2)
                                     (nwhl 2)
                                     (cshape dblopnrect)))
                          (nwhl 2)
                          (cshape closedrect))
                         !X8)))))
(define (trains-problem :id train-problem-47)
  (solution west)
  (description (define (trains-description :id train-47)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 2)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (trianglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape openrect)))
                                                (nwhl 2)
                                                (cshape openrect)))
                                     (nwhl 2)
                                     (cshape dblopnrect)))
                          (nwhl 2)
                          (cshape openhex))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-48)
  (solution west)
  (description (define (trains-description :id train-48)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln long)
                                                           (npl 3)
                                                           (lcont (define (rectanglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape closedrect)))
                                                (nwhl 2)
                                                (cshape openrect)))
                                     (nwhl 2)
                                     (cshape dblopnrect)))
                          (nwhl 2)
                          (cshape ushaped))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-49)
  (solution west)
  (description (define (trains-description :id train-49)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape ushaped))
                         !X7)))))
(define (trains-problem :id train-problem-50)
  (solution west)
  (description (define (trains-description :id train-50)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 2)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (circlelod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape ushaped)))
                                                (nwhl 2)
                                                (cshape openhex)))
                                     (nwhl 2)
                                     (cshape ushaped)))
                          (nwhl 2)
                          (cshape dblopnrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-51)
  (solution west)
  (description (define (trains-description :id train-51)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 2)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (diamondlod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape openhex)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-52)
  (solution west)
  (description (define (trains-description :id train-52)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 2)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X8 (car)
                                     (ln long)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (nwhl 3)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape openhex))
                         !X8)))))
(define (trains-problem :id train-problem-53)
  (solution west)
  (description (define (trains-description :id train-53)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln long)
                                                (npl 1)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln long)
                                                           (npl 1)
                                                           (lcont (define (utrianglod)))
                                                           (loc 4)
                                                           (nwhl 3)
                                                           (cshape jaggedtop)))
                                                (nwhl 3)
                                                (cshape closedrect)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-54)
  (solution west)
  (description (define (trains-description :id train-54)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 3)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (infront (define ?X11 (car)
                                                (ln long)
                                                (npl 3)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln long)
                                                           (npl 1)
                                                           (lcont (define (rectanglod)))
                                                           (loc 4)
                                                           (nwhl 3)
                                                           (cshape closedrect)))
                                                (nwhl 2)
                                                (cshape closedrect)))
                                     (nwhl 3)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X11
                         !X13)))))
(define (trains-problem :id train-problem-55)
  (solution west)
  (description (define (trains-description :id train-55)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 3)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (infront (define ?X11 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln long)
                                                           (npl 3)
                                                           (lcont (define (rectanglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape openrect)))
                                                (nwhl 2)
                                                (cshape ushaped)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X11
                         !X13)))))
(define (trains-problem :id train-problem-56)
  (solution west)
  (description (define (trains-description :id train-56)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln long)
                                                           (npl 1)
                                                           (lcont (define (rectanglod)))
                                                           (loc 4)
                                                           (nwhl 3)
                                                           (cshape closedrect)))
                                                (nwhl 2)
                                                (cshape openrect)))
                                     (nwhl 3)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape closedrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-57)
  (solution west)
  (description (define (trains-description :id train-57)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape openhex))
                         !X7)))))
(define (trains-problem :id train-problem-58)
  (solution west)
  (description (define (trains-description :id train-58)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 2)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln long)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape openrect)))
                                     (nwhl 2)
                                     (cshape dblopnrect)))
                          (nwhl 3)
                          (cshape openrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-59)
  (solution west)
  (description (define (trains-description :id train-59)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 0)
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 1)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln long)
                                                (npl 1)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape closedrect)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape closedrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-60)
  (solution west)
  (description (define (trains-description :id train-60)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 2)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X8 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (nwhl 2)
                                     (cshape ushaped)))
                          (nwhl 3)
                          (cshape closedrect))
                         !X8)))))
(define (trains-problem :id train-problem-61)
  (solution west)
  (description (define (trains-description :id train-61)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape dblopnrect))
                         !X7)))))
(define (trains-problem :id train-problem-62)
  (solution west)
  (description (define (trains-description :id train-62)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 0)
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (circlelod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape openrect)))
                                                (nwhl 2)
                                                (cshape openrect)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-63)
  (solution west)
  (description (define (trains-description :id train-63)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape openrect)))
                                     (nwhl 2)
                                     (cshape openhex)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-64)
  (solution west)
  (description (define (trains-description :id train-64)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 1)
                                     (lcont (define (hexagonlod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln long)
                                                (npl 3)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (nwhl 3)
                                                (cshape openrect)))
                                     (nwhl 3)
                                     (cshape closedrect)))
                          (nwhl 2)
                          (cshape openhex))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-65)
  (solution west)
  (description (define (trains-description :id train-65)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 0)
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape openrect)))
                                     (nwhl 2)
                                     (cshape openhex)))
                          (nwhl 3)
                          (cshape openrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-66)
  (solution west)
  (description (define (trains-description :id train-66)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln long)
                                                (npl 3)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape openrect)))
                                     (nwhl 2)
                                     (cshape ushaped)))
                          (nwhl 2)
                          (cshape closedrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-67)
  (solution west)
  (description (define (trains-description :id train-67)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln long)
                                                (npl 3)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (circlelod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape openrect)))
                                                (nwhl 3)
                                                (cshape closedrect)))
                                     (nwhl 2)
                                     (cshape openhex)))
                          (nwhl 2)
                          (cshape ushaped))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-68)
  (solution west)
  (description (define (trains-description :id train-68)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 1)
                                     (lcont (define (hexagonlod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln long)
                                                (npl 2)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln long)
                                                           (npl 2)
                                                           (lcont (define (rectanglod)))
                                                           (loc 4)
                                                           (nwhl 3)
                                                           (cshape closedrect)))
                                                (nwhl 3)
                                                (cshape jaggedtop)))
                                     (nwhl 3)
                                     (cshape jaggedtop)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-69)
  (solution west)
  (description (define (trains-description :id train-69)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape ushaped)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-70)
  (solution west)
  (description (define (trains-description :id train-70)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7)))))
(define (trains-problem :id train-problem-71)
  (solution west)
  (description (define (trains-description :id train-71)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 1)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln long)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape openrect)))
                                     (nwhl 3)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-72)
  (solution west)
  (description (define (trains-description :id train-72)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 3)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X8 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (infront (define ?X11 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (trianglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape ushaped)))
                                                (nwhl 2)
                                                (cshape openrect)))
                                     (nwhl 2)
                                     (cshape openhex)))
                          (nwhl 2)
                          (cshape closedrect))
                         !X8
                         !X11
                         !X13)))))
(define (trains-problem :id train-problem-73)
  (solution west)
  (description (define (trains-description :id train-73)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (trianglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape openhex)))
                                                (nwhl 2)
                                                (cshape dblopnrect)))
                                     (nwhl 2)
                                     (cshape openhex)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-74)
  (solution west)
  (description (define (trains-description :id train-74)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 1)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (nwhl 3)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7)))))
(define (trains-problem :id train-problem-75)
  (solution west)
  (description (define (trains-description :id train-75)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 3)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X8 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X8)))))
(define (trains-problem :id train-problem-76)
  (solution west)
  (description (define (trains-description :id train-76)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 1)
                                     (lcont (define (utrianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (rectanglod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape openrect)))
                                     (nwhl 3)
                                     (cshape closedrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10)))))
(define (trains-problem :id train-problem-77)
  (solution west)
  (description (define (trains-description :id train-77)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 2)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (circlelod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape ushaped)))
                                                (nwhl 2)
                                                (cshape openrect)))
                                     (nwhl 2)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-78)
  (solution west)
  (description (define (trains-description :id train-78)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (nwhl 2)
                                     (cshape openhex)))
                          (nwhl 2)
                          (cshape openhex))
                         !X7)))))
(define (trains-problem :id train-problem-79)
  (solution west)
  (description (define (trains-description :id train-79)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 1)
                                     (lcont (define (circlelod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (trianglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape dblopnrect)))
                                                (nwhl 2)
                                                (cshape ushaped)))
                                     (nwhl 3)
                                     (cshape openrect)))
                          (nwhl 2)
                          (cshape dblopnrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-80)
  (solution west)
  (description (define (trains-description :id train-80)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 2)
                          (lcont (define (trianglod)))
                          (loc 1)
                          (infront (define ?X8 (car)
                                     (ln short)
                                     (npl 1)
                                     (lcont (define (trianglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln long)
                                                (npl 0)
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (trianglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape openrect)))
                                                (nwhl 3)
                                                (cshape openrect)))
                                     (nwhl 2)
                                     (cshape ushaped)))
                          (nwhl 2)
                          (cshape openrect))
                         !X8
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-81)
  (solution west)
  (description (define (trains-description :id train-81)
                 (cars (define (set)
                         (define (car)
                          (ln short)
                          (npl 1)
                          (lcont (define (circlelod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln long)
                                     (npl 2)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (circlelod)))
                                                (loc 3)
                                                (infront (define ?X13 (car)
                                                           (ln short)
                                                           (npl 1)
                                                           (lcont (define (rectanglod)))
                                                           (loc 4)
                                                           (nwhl 2)
                                                           (cshape openrect)))
                                                (nwhl 2)
                                                (cshape openhex)))
                                     (nwhl 2)
                                     (cshape closedrect)))
                          (nwhl 2)
                          (cshape openrect))
                         !X7
                         !X10
                         !X13)))))
(define (trains-problem :id train-problem-82)
  (solution west)
  (description (define (trains-description :id train-82)
                 (cars (define (set)
                         (define (car)
                          (ln long)
                          (npl 1)
                          (lcont (define (rectanglod)))
                          (loc 1)
                          (infront (define ?X7 (car)
                                     (ln short)
                                     (npl 2)
                                     (lcont (define (rectanglod)))
                                     (loc 2)
                                     (infront (define ?X10 (car)
                                                (ln short)
                                                (npl 1)
                                                (lcont (define (trianglod)))
                                                (loc 3)
                                                (nwhl 2)
                                                (cshape openrect)))
                                     (nwhl 2)
                                     (cshape openhex)))
                          (nwhl 2)
                          (cshape closedrect))
                         !X7
                         !X10)))))